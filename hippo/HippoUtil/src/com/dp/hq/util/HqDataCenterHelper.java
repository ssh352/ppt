package com.dp.hq.util;

import cn.com.wind.td.tdf.TDF_FUTURE_DATA;
import cn.com.wind.td.tdf.TDF_INDEX_DATA;
import cn.com.wind.td.tdf.TDF_MARKET_DATA;
import cn.com.wind.td.tdf.TDF_MSG_DATA;

public class HqDataCenterHelper {
	private static String FormatRealTimeMarketDataSQL = "insert into realtimemarketdata(SzWindCode,SzCode,nActionDay,nTradingDay,nTime,nStatus,nPreClose,nOpen,nHigh,nLow,nMatch,nAskPrice1,nAskPrice2,nAskPrice3,nAskPrice4,nAskPrice5,nAskPrice6,nAskPrice7,nAskPrice8,nAskPrice9,nAskPrice10,nAskVol1,nAskVol2,nAskVol3,nAskVol4,nAskVol5,nAskVol6,nAskVol7,nAskVol8,nAskVol9,nAskVol10,nBidPrice1,nBidPrice2,nBidPrice3,nBidPrice4,nBidPrice5,nBidPrice6,nBidPrice7,nBidPrice8,nBidPrice9,nBidPrice10,nBidVol1,nBidVol2,nBidVol3,nBidVol4,nBidVol5,nBidVol6,nBidVol7,nBidVol8,nBidVol9,nBidVol10,nNumTrades,iVolume,iTurnover,nTotalBidVol,nTotalAskVol,nWeightedAvgBidPrice,nWeightedAvgAskPrice,nIOPV,nYieldToMaturity,nHighLimited,nLowLimited,chPrefix,nSyl1,nSyl2,nSD2)" + 
														"values('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')" +
														"ON DUPLICATE KEY UPDATE " + 
														"SzWindCode='%s',SzCode='%s',nActionDay='%s',nTradingDay='%s',nTime='%s',nStatus='%s',nPreClose='%s',nOpen='%s',nHigh='%s',nLow='%s',nMatch='%s',nAskPrice1='%s',nAskPrice2='%s',nAskPrice3='%s',nAskPrice4='%s',nAskPrice5='%s',nAskPrice6='%s',nAskPrice7='%s',nAskPrice8='%s',nAskPrice9='%s',nAskPrice10='%s',nAskVol1='%s',nAskVol2='%s',nAskVol3='%s',nAskVol4='%s',nAskVol5='%s',nAskVol6='%s',nAskVol7='%s',nAskVol8='%s',nAskVol9='%s',nAskVol10='%s',nBidPrice1='%s',nBidPrice2='%s',nBidPrice3='%s',nBidPrice4='%s',nBidPrice5='%s',nBidPrice6='%s',nBidPrice7='%s',nBidPrice8='%s',nBidPrice9='%s',nBidPrice10='%s',nBidVol1='%s',nBidVol2='%s',nBidVol3='%s',nBidVol4='%s',nBidVol5='%s',nBidVol6='%s',nBidVol7='%s',nBidVol8='%s',nBidVol9='%s',nBidVol10='%s',nNumTrades='%s',iVolume='%s',iTurnover='%s',nTotalBidVol='%s',nTotalAskVol='%s',nWeightedAvgBidPrice='%s',nWeightedAvgAskPrice='%s',nIOPV='%s',nYieldToMaturity='%s',nHighLimited='%s',nLowLimited='%s',chPrefix='%s',nSyl1='%s',nSyl2='%s',nSD2='%s'";
	private static String FormatRealTimeFutureDataSQL = "insert into realtimefuturedata(szWindCode,szCode,nActionDay,nTradingDay,nTime,nStatus,iPreOpenInterest,nPreClose,nPreSettlePrice,nOpen,nHigh,nLow,nMatch,iVolume,iTurnover,iOpenInterest,nClose,nSettlePrice,nHighLimited,nLowLimited,nPreDelta,nCurrDelta,nAskPrice1,nAskPrice2,nAskPrice3,nAskPrice4,nAskPrice5,nAskVol1,nAskVol2,nAskVol3,nAskVol4,nAskVol5,nBidPrice1,nBidPrice2,nBidPrice3,nBidPrice4,nBidPrice5,nBidVol1,nBidVol2,nBidVol3,nBidVol4,nBidVol5)" +
														"values('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')" +
														"ON DUPLICATE KEY UPDATE " + 
														"szWindCode='%s',szCode='%s',nActionDay='%s',nTradingDay='%s',nTime='%s',nStatus='%s',iPreOpenInterest='%s',nPreClose='%s',nPreSettlePrice='%s',nOpen='%s',nHigh='%s',nLow='%s',nMatch='%s',iVolume='%s',iTurnover='%s',iOpenInterest='%s',nClose='%s',nSettlePrice='%s',nHighLimited='%s',nLowLimited='%s',nPreDelta='%s',nCurrDelta='%s',nAskPrice1='%s',nAskPrice2='%s',nAskPrice3='%s',nAskPrice4='%s',nAskPrice5='%s',nAskVol1='%s',nAskVol2='%s',nAskVol3='%s',nAskVol4='%s',nAskVol5='%s',nBidPrice1='%s',nBidPrice2='%s',nBidPrice3='%s',nBidPrice4='%s',nBidPrice5='%s',nBidVol1='%s',nBidVol2='%s',nBidVol3='%s',nBidVol4='%s',nBidVol5='%s'";
	private static String FormatRealTimeIndexDataSQL  = "insert into realtimeindex(SzWindCode,szCode,nActionDay,nTradingDay,nTime,nOpenIndex,nHighIndex,nLowIndex,nLastIndex,iTotalVolume,iTurnover,nPreCloseIndex)" +
														"values('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')" +
														"ON DUPLICATE KEY UPDATE " + 
														"SzWindCode='%s',szCode='%s',nActionDay='%s',nTradingDay='%s',nTime='%s',nOpenIndex='%s',nHighIndex='%s',nLowIndex='%s',nLastIndex='%s',iTotalVolume='%s',iTurnover='%s',nPreCloseIndex='%s'";

	public static String FormatRealTimeIndexData(TDF_MSG_DATA data){
		TDF_INDEX_DATA t = data.getIndexData();
		return String.format(FormatRealTimeIndexDataSQL, 
														t.getWindCode(),
														t.getCode(),
														t.getActionDay(),
														t.getTradingDay(),
														t.getTime(),
														t.getOpenIndex()/10000.0,
														t.getHighIndex()/10000.0,
														t.getLowIndex()/10000.0,
														t.getLastIndex()/10000.0,
														t.getTotalVolume(),
														t.getTurnover(),
														t.getPreCloseIndex()/10000.0,
														t.getWindCode(),
														t.getCode(),
														t.getActionDay(),
														t.getTradingDay(),
														t.getTime(),
														t.getOpenIndex()/10000.0,
														t.getHighIndex()/10000.0,
														t.getLowIndex()/10000.0,
														t.getLastIndex()/10000.0,
														t.getTotalVolume(),
														t.getTurnover(),
														t.getPreCloseIndex()/10000.0);
	}
	
	public static String FormatRealTimeFutureData(TDF_MSG_DATA data){
		TDF_FUTURE_DATA t = data.getFutureData();
		return String.format(FormatRealTimeFutureDataSQL, 
								t.getWindCode(),
								t.getCode(),
								t.getActionDay(),
								t.getTradingDay(),
								t.getTime(),
								t.getStatus(),
								t.getPreOpenInterest(),
								t.getPreClose()/10000.0,
								t.getPreSettlePrice()/10000.0,
								t.getOpen()/10000.0,
								t.getHigh()/10000.0,
								t.getLow()/10000.0,
								t.getMatch()/10000.0,
								t.getVolume(),
								t.getTurnover(),
								t.getOpenInterest(),
								t.getClose()/10000.0,
								t.getSettlePrice()/10000.0,
								t.getHighLimited()/10000.0,
								t.getLowLimited()/10000.0,
								t.getPreDelta(),
								t.getCurrDelta(),
								t.getAskPrice()[0]/10000.0,
								t.getAskPrice()[1]/10000.0,
								t.getAskPrice()[2]/10000.0,
								t.getAskPrice()[3]/10000.0,
								t.getAskPrice()[4]/10000.0,
								t.getAskVol()[0],
								t.getAskVol()[1],
								t.getAskVol()[2],
								t.getAskVol()[3],
								t.getAskVol()[4],
								t.getBidPrice()[0]/10000.0,
								t.getBidPrice()[1]/10000.0,
								t.getBidPrice()[2]/10000.0,
								t.getBidPrice()[3]/10000.0,
								t.getBidPrice()[4]/10000.0,
								t.getBidVol()[0],
								t.getBidVol()[1],
								t.getBidVol()[2],
								t.getBidVol()[3],
								t.getBidVol()[4],
								t.getWindCode(),
								t.getCode(),
								t.getActionDay(),
								t.getTradingDay(),
								t.getTime(),
								t.getStatus(),
								t.getPreOpenInterest(),
								t.getPreClose()/10000.0,
								t.getPreSettlePrice()/10000.0,
								t.getOpen()/10000.0,
								t.getHigh()/10000.0,
								t.getLow()/10000.0,
								t.getMatch()/10000.0,
								t.getVolume(),
								t.getTurnover(),
								t.getOpenInterest(),
								t.getClose()/10000.0,
								t.getSettlePrice()/10000.0,
								t.getHighLimited()/10000.0,
								t.getLowLimited()/10000.0,
								t.getPreDelta(),
								t.getCurrDelta(),
								t.getAskPrice()[0]/10000.0,
								t.getAskPrice()[1]/10000.0,
								t.getAskPrice()[2]/10000.0,
								t.getAskPrice()[3]/10000.0,
								t.getAskPrice()[4]/10000.0,
								t.getAskVol()[0],
								t.getAskVol()[1],
								t.getAskVol()[2],
								t.getAskVol()[3],
								t.getAskVol()[4],
								t.getBidPrice()[0]/10000.0,
								t.getBidPrice()[1]/10000.0,
								t.getBidPrice()[2]/10000.0,
								t.getBidPrice()[3]/10000.0,
								t.getBidPrice()[4]/10000.0,
								t.getBidVol()[0],
								t.getBidVol()[1],
								t.getBidVol()[2],
								t.getBidVol()[3],
								t.getBidVol()[4]);
	}
	
	public static String FormatRealTimeMarketData(TDF_MSG_DATA data){
		TDF_MARKET_DATA t = data.getMarketData();
		return String.format(FormatRealTimeMarketDataSQL, 
							t.getWindCode(),
							t.getCode(),
							t.getActionDay(),
							t.getTradingDay(),
							t.getTime(),
							t.getStatus(),
							t.getPreClose()/10000.0,
							t.getOpen()/10000.0,
							t.getHigh()/10000.0,
							t.getLow()/10000.0,
							t.getMatch()/10000.0,
							t.getAskPrice()[0]/10000.0,
							t.getAskPrice()[1]/10000.0,
							t.getAskPrice()[2]/10000.0,
							t.getAskPrice()[3]/10000.0,
							t.getAskPrice()[4]/10000.0,
							t.getAskPrice()[5]/10000.0,
							t.getAskPrice()[6]/10000.0,
							t.getAskPrice()[7]/10000.0,
							t.getAskPrice()[8]/10000.0,
							t.getAskPrice()[9]/10000.0,
							t.getAskVol()[0],
							t.getAskVol()[1],
							t.getAskVol()[2],
							t.getAskVol()[3],
							t.getAskVol()[4],
							t.getAskVol()[5],
							t.getAskVol()[6],
							t.getAskVol()[7],
							t.getAskVol()[8],
							t.getAskVol()[9],
							t.getBidPrice()[0]/10000.0,
							t.getBidPrice()[1]/10000.0,
							t.getBidPrice()[2]/10000.0,
							t.getBidPrice()[3]/10000.0,
							t.getBidPrice()[4]/10000.0,
							t.getBidPrice()[5]/10000.0,
							t.getBidPrice()[6]/10000.0,
							t.getBidPrice()[7]/10000.0,
							t.getBidPrice()[8]/10000.0,
							t.getBidPrice()[9]/10000.0,
							t.getBidVol()[0],
							t.getBidVol()[1],
							t.getBidVol()[2],
							t.getBidVol()[3],
							t.getBidVol()[4],
							t.getBidVol()[5],
							t.getBidVol()[6],
							t.getBidVol()[7],
							t.getBidVol()[8],
							t.getBidVol()[9],
							t.getNumTrades(),
							t.getVolume(),
							t.getTurnover(),
							t.getTotalBidVol(),
							t.getTotalAskVol(),
							t.getWeightedAvgBidPrice()/10000.0,
							t.getWeightedAvgAskPrice()/10000.0,
							t.getIOPV(),
							t.getYieldToMaturity(),
							t.getHighLimited()/10000.0,
							t.getLowLimited()/10000.0,
							t.getPrefix(),
							t.getSyl1(),
							t.getSyl2(),
							t.getSD2(),
							t.getWindCode(),
							t.getCode(),
							t.getActionDay(),
							t.getTradingDay(),
							t.getTime(),
							t.getStatus(),
							t.getPreClose()/10000.0,
							t.getOpen()/10000.0,
							t.getHigh()/10000.0,
							t.getLow()/10000.0,
							t.getMatch()/10000.0,
							t.getAskPrice()[0]/10000.0,
							t.getAskPrice()[1]/10000.0,
							t.getAskPrice()[2]/10000.0,
							t.getAskPrice()[3]/10000.0,
							t.getAskPrice()[4]/10000.0,
							t.getAskPrice()[5]/10000.0,
							t.getAskPrice()[6]/10000.0,
							t.getAskPrice()[7]/10000.0,
							t.getAskPrice()[8]/10000.0,
							t.getAskPrice()[9]/10000.0,
							t.getAskVol()[0],
							t.getAskVol()[1],
							t.getAskVol()[2],
							t.getAskVol()[3],
							t.getAskVol()[4],
							t.getAskVol()[5],
							t.getAskVol()[6],
							t.getAskVol()[7],
							t.getAskVol()[8],
							t.getAskVol()[9],
							t.getBidPrice()[0]/10000.0,
							t.getBidPrice()[1]/10000.0,
							t.getBidPrice()[2]/10000.0,
							t.getBidPrice()[3]/10000.0,
							t.getBidPrice()[4]/10000.0,
							t.getBidPrice()[5]/10000.0,
							t.getBidPrice()[6]/10000.0,
							t.getBidPrice()[7]/10000.0,
							t.getBidPrice()[8]/10000.0,
							t.getBidPrice()[9]/10000.0,
							t.getBidVol()[0],
							t.getBidVol()[1],
							t.getBidVol()[2],
							t.getBidVol()[3],
							t.getBidVol()[4],
							t.getBidVol()[5],
							t.getBidVol()[6],
							t.getBidVol()[7],
							t.getBidVol()[8],
							t.getBidVol()[9],
							t.getNumTrades(),
							t.getVolume(),
							t.getTurnover(),
							t.getTotalBidVol(),
							t.getTotalAskVol(),
							t.getWeightedAvgBidPrice()/10000.0,
							t.getWeightedAvgAskPrice()/10000.0,
							t.getIOPV(),
							t.getYieldToMaturity(),
							t.getHighLimited()/10000.0,
							t.getLowLimited()/10000.0,
							t.getPrefix(),
							t.getSyl1(),
							t.getSyl2(),
							t.getSD2());
	}
}
